# Check if Active Directory module is available
$adModuleInstalled = Get-Module -ListAvailable -Name ActiveDirectory -ErrorAction SilentlyContinue

if (-not $adModuleInstalled) {
    Write-Host "Active Directory module not found. Do you want to install it? (Y/N)"
    $installChoice = Read-Host

    if ($installChoice -eq 'Y' -or $installChoice -eq 'y') {
        Write-Host "Installing Active Directory module..."
        Add-WindowsCapability -online -Name Rsat.ActiveDirectory.DS-LDS.Tools~~~~0.0.1.0
        #Install-Module -Name ActiveDirectory -Force -Scope CurrentUser
        Import-Module ActiveDirectory
        Write-Host "Active Directory module installed successfully."
    } else {
        Write-Host "Active Directory module is required. Exiting script."
        Exit
    }
}

# Set the threshold for last logon (in days)
$thresholdDays = 90

# Get the current date
$currentDate = Get-Date

# Calculate the threshold date
$thresholdDate = $currentDate.AddDays(-$thresholdDays)
y
# Get all domain controllers in the current domain
$domainControllers = Get-ADDomainController -Filter *

# Initialize an array to store the results
$staleComputers = @()

# Loop through each domain controller
foreach ($dc in $domainControllers) {
    # Get computers from each domain controller and filter based on last logon date
    $computersOnDC = Get-ADComputer -Filter {LastLogonDate -lt $thresholdDate} -Properties LastLogonDate -Server $dc.Name

    # Add the computers to the results array
    $staleComputers += $computersOnDC
}

# Display the results
foreach ($computer in $staleComputers) {
    Write-Host "Computer: $($computer.SamAccountName)"
    Write-Host "Last Logon Date: $($computer.LastLogonDate)"
    Write-Host "----------------------"
}

# Optional: Export the results to a CSV file
$exportPath = "C:\Path\To\Export\StaleComputers.csv"
$staleComputers | Select-Object SamAccountName, LastLogonDate | Export-Csv -Path $exportPath -NoTypeInformation

Write-Host "Script completed. Results exported to: $exportPath"
